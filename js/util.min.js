/**
 * @author Tiago Ribeiro - www.tiago-ribeiro.com
 * @description Helper class that has several utilitary functions such as field validation, isEmpty, isArray, etc
 * @see https://github.com/Ribeiro-Tiago/util
 * @copyright MIT license, 2017
 * @version 1.0.7
 */
(function(){'use strict';let isValid=function(obj,errorHandle){let handleErrors=((typeof module!=='undefined'&&typeof module.exports!=='undefined')||(typeof define==='function'&&define.amd))?!1:(errorHandle||!0);if(isEmpty(obj))throw new Error("Invalid arguments!");let errors=[];let validate=function(input,rule,message,ruleValue,optional){let inputValue=(input.tagName)?input.value:input[0].value;if(optional&&isEmpty(inputValue))return!0;if(rule==="required"){if(isEmpty(inputValue)){errors.push({error:message||"Required field!",input:input})}}else if(rule==="number"){if(!isNumber(inputValue)){errors.push({error:message||"Numeric field!",input:input})}}else if(rule==="even"){if(!isEven(inputValue)){errors.push({error:message||"Value must be even!",input:input})}}else if(rule==="maxvalue"){if(!isNumber(ruleValue))throw new Error("Error validating maxvalue: value isn't number!");if(parseInt(inputValue)>parseInt(ruleValue)){errors.push({error:message||"Value must be below "+ruleValue+"!",input:input})}}else if(rule==="minvalue"){if(!isNumber(ruleValue))throw new Error("Error validating maxvalue: value isn't number!");if(parseInt(inputValue)<parseInt(ruleValue)){errors.push({error:message||"Value must be above "+ruleValue+"!",input:input})}}else if(rule==="positive"){if(!isPositive(inputValue)){errors.push({error:message||"Field must be positive!",input:input})}}else if(rule==="equal"){let incorrectValue=function(value){return(parseInt(inputValue)!==parseInt(value))};let different=(isObject(ruleValue))?ruleValue.every(incorrectValue):incorrectValue(ruleValue);if(different){errors.push({error:message||"Value must be one of the following: "+ruleValue+"!",input:input})}}else if(rule==="maxlen"){if(inputValue.length>ruleValue){errors.push({error:message||"Maximum value length: "+ruleValue+"!",input:input})}}else if(rule==="minlen"){if(inputValue.length<ruleValue){errors.push({error:message||"Minimum value length: "+ruleValue+"!",input:input})}}else if(rule==="email"){let regex=new RegExp(/^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,3})+$/);if(!regex.test(inputValue)){errors.push({error:message||"Invalid email!",input:input})}}else if(rule==="phone"){let err=!1;for(let index in ruleValue){let format=ruleValue[index];if(err)break;for(let i=0;i<format.length;i++){if(format[i]!==inputValue[i]){err=!0;errors.push({error:message||"Values don't match!",input:input});break}}}}else throw new Error("Invalid rule: !\n\tInput: "+input.name+"\n\tRule: "+rule)};let parseObj=function(item){let rule=item.rule;let input=item.input;let parseInput=function(input){if(isArray(rule)){Array.prototype.forEach.call(rule,function(current,index){validate(input,current.rule,current.message,current.value,current.optional)})}else if(isObject(rule))validate(input,rule.rule,rule.message,rule.value,rule.optional);else validate(input,rule,item.message,item.value,item.optional)};if(isArray(input)){Array.prototype.forEach.call(input,function(current){parseInput(current)})}else parseInput(input)};if(isArray(obj)){Array.prototype.forEach.call(obj,function(item){parseObj(item)})}else parseObj(obj);if(handleErrors){if(isEmpty(errors)){removeValdiationErrors();return!0}handleValidationErrors(errors);return!1}return isEmpty(errors)};let handleValidationErrors=function(errors){removeValdiationErrors();let addValidationErrors=function(parent,err){if(parent.classList.contains("has-error"))return;let span=document.createElement("span");parent.classList.add("has-error");span.innerHTML=err;parent.appendChild(span)};Array.prototype.forEach.call(errors,function(item,index){let getParent=(elem)=>{return(util.isDOM(elem))?elem.parentElement:elem[0].parentElement};if(isArray(item.input)){Array.prototype.forEach.call(item.input,function(input){addValidationErrors(getParent(input),item.error)})}else addValidationErrors(getParent(item.input),item.error)})};let removeValdiationErrors=function(){let elems=document.getElementsByClassName("error-span");for(let i=elems.length-1;i>=0;i--){elems[i].parentElement.classList.remove("has-error");elems[i].remove()}};let isNumber=function(value){let regex=new RegExp(/^[0-9]+$/);return(regex.test(parseInt(value)))};let isEmpty=function(value){return(value===void 0||value===""||value===null||String(value).toLocaleLowerCase()==="null"||value==="undefined"||(typeof value==="object"&&Object.keys(value).length===0))};let isPositive=function(value){if(!isNumber(value))throw Error("Value isn't a number!");return(value>=0)};let isEven=function(value){if(!isNumber(value))throw new Error("Value isn't a number");return(value%2===0)};let isArray=function(value){return Object.prototype.toString.call(value)==='[object Array]'};let isDOM=function(value){return Object.prototype.toString.call(value)==='[object HTMLInputElement]'};let isObject=function(value){if(isEmpty(value))throw new Error("Value is empty!");return typeof value==="object"};Array.prototype.pushUnique=function(value){if(this.inArray(value))return!1;this.push(value);return!0};Array.prototype.removeIfExists=function(value){if(isEmpty(value))return;let index=this.indexOf(value);if(index===-1)return;this.splice(index,1)};Date.formatDate=function(date,type){if(util.isEmpty(date))throw new Error("Invalid date: ",date);try{let d=(date instanceof Date)?date:new Date(date)}catch(ex){throw new Error("Invalid date: ",ex.message)}let day=(d.getDate()<10)?"0"+d.getDate():d.getDate();let month=(d.getMonth()<10)?"0"+d.getMonth():d.getMonth();let hour=(d.getHours()<10)?"0"+d.getHours():d.getHours();let minute=(d.getMinutes()<10)?"0"+d.getMinutes():d.getMinutes();let time=hour+":"+minute+"  ";if(type===1)return time+day+"/"+month+"/"+d.getFullYear();else if(type===2)return time+month+"/"+day+"/"+d.getFullYear();else return time+d.getFullYear()+"/"+month+"/"+day};Date.prototype.formatDate=function(type){Date.formatDate(this,type)};let util={isValid,isNumber,isEmpty,isPositive,isEven,isArray,isObject,isDOM};if(typeof module!=='undefined'&&typeof module.exports!=='undefined'){module.exports=util}else if(typeof define==='function'&&define.amd){define([],function(){return util})}else if(React){export{isValid,isNumber,isEmpty,isPositive,isEven,isArray,isObject,isDOM};}else{window.util=util}})()